{"version":3,"file":"index.2f05bafb.js","sources":["../../vite/modulepreload-polyfill","../../src/providers/AuthProvider.tsx","../../src/hooks/useAuth.ts","../../src/pages/LoginPage.tsx","../../src/pages/TwoFactorPage.tsx","../../src/components/SecureRoute.tsx","../../src/components/Group.tsx","../../src/pages/DashboardPage.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import {\n  createContext,\n  FunctionComponent,\n  useEffect,\n  useState,\n} from 'react';\nimport axios from 'axios';\n\ntype PasswordLoginResponse = {\n  mfa_required: {\n    type: 'OTP_TOKEN',\n    state: string,\n  },\n  token: null\n};\n\ntype TokenLoginResponse = {\n  token: string;\n};\n\ntype AuthContextType = {\n  isLoggedIn: boolean;\n  needToken: boolean;\n  passwordLogin: (\n    email: string,\n    password: string,\n    success?: () => void,\n    error?: () => void,\n  ) => void;\n  tokenLogin: (token: string, success?: () => void) => void;\n  logout: () => void;\n};\n\nexport const AuthContext = createContext<AuthContextType | undefined>(\n  undefined,\n);\n\nconst storeToken = (token: string) => {\n  // set the auth header in axios with our token\n  axios.defaults.headers.common['Authorization'] = `JWT ${token}`;\n\n  // save our jwt token into session storage in case the page is refreshed\n  localStorage.setItem('jwt', token);\n};\n\nconst AuthProvider: FunctionComponent = ({ children }) => {\n  const [jwtToken, setJwtToken] = useState<string>(\n    localStorage.getItem('jwt') ?? '',\n  );\n  const [twoFactorState, setTwoFactorState] = useState('');\n\n  // set our axios auth if we already have a token in storage\n  useEffect(() => {\n    if (localStorage.getItem('jwt')) {\n      // set the auth header in axios with our token\n      axios.defaults.headers.common[\n        'Authorization'\n      ] = `JWT ${localStorage.getItem('jwt')}`;\n    }\n  }, []);\n\n  // setup our axios interceptor to renew tokens\n  useEffect(() => {\n    // Use interceptor to watch for new token from api\n    axios.interceptors.response.use((res) => {\n      const newToken = res.headers['X-New-Token'];\n\n      if (newToken) {\n        setJwtToken(newToken);\n\n        storeToken(newToken);\n      }\n\n      return res;\n    });\n  }, []);\n\n  const passwordLogin = (\n    email: string,\n    password: string,\n    success?: () => void,\n    error?: () => void,\n  ) => {\n    axios\n      .post<PasswordLoginResponse>('auth/login', { email, password })\n      .then((res) => {\n        // store the token in local state\n        setTwoFactorState(res.data.mfa_required.state);\n\n        // call the success callback if there is one\n        if (success) {\n          success();\n        }\n      })\n      .catch(() => {\n        if (error) {\n          error();\n        }\n      });\n  };\n\n  const tokenLogin = (token: string, success?: () => void) => {\n    axios\n      .put<TokenLoginResponse>('auth/login', {\n        token,\n        state: twoFactorState,\n      })\n      .then((res) => {\n        // store the token in local state\n        setJwtToken(res.data.token);\n\n        // store the token in local storage and axios\n        storeToken(res.data.token);\n\n        // call our success callback\n        if (success) {\n          success();\n        }\n      });\n  };\n\n  const logout = () => {\n    setJwtToken('');\n    localStorage.removeItem('jwt');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!jwtToken,\n        needToken: !jwtToken && !!twoFactorState,\n        passwordLogin,\n        tokenLogin,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;","import { useContext } from 'react';\nimport { AuthContext } from '../providers/AuthProvider';\n\nexport const useAuth = () => {\n  const {\n    isLoggedIn,\n    needToken,\n    passwordLogin,\n    tokenLogin,\n    logout,\n  } = useContext(AuthContext)!;\n  return {\n    isLoggedIn,\n    needToken,\n    passwordLogin,\n    tokenLogin,\n    logout,\n  };\n};","import { Formik, Form, Field } from 'formik';\nimport { useAuth } from '../hooks/useAuth';\n\nconst LoginPage = () => {\n  const { passwordLogin } = useAuth();\n  \n  return (\n    <div>\n      <div className=\"text-xl font-bold mb-4 w-64\">\n        Login\n      </div>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        onSubmit={(values) => passwordLogin(values.email, values.password)}\n      >\n        {() => (\n          <Form>\n            <div>\n              <Field name=\"email\" placeholder=\"email\" className=\"bg-gray-700 p-4 mb-2 w-full\" />\n            </div>\n            <div>\n              <Field name=\"password\" type=\"password\" placeholder=\"password\" className=\"bg-gray-700 p-4 mb-4 w-full\" />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"border-gray-700 bg-gray-800 hover:bg-gray-700 w-full p-2\"\n            >\n              Login\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default LoginPage;","import { Formik, Form, Field } from 'formik';\nimport { useAuth } from '../hooks/useAuth';\n\nconst TwoFactorPage = () => {\n  const { tokenLogin } = useAuth();\n  \n  return (\n    <div>\n      <div className=\"text-xl font-bold mb-4 w-64\">\n        Token\n      </div>\n      <Formik\n        initialValues={{\n          token: '',\n        }}\n        onSubmit={(values) => tokenLogin(values.token)}\n      >\n        {() => (\n          <Form>\n            <Field name=\"token\" placeholder=\"token\" className=\"bg-gray-700 p-4 mb-2 w-full\" />\n            <button\n              type=\"submit\"\n              className=\"border-gray-700 bg-gray-800 hover:bg-gray-700 w-full p-2\"\n            >\n              Login\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default TwoFactorPage;","import { FunctionComponent } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport LoginPage from '../pages/LoginPage';\nimport TwoFactorPage from '../pages/TwoFactorPage';\n\ntype Props = {\n  path: string;\n}\n\nconst SecureRoute: FunctionComponent<Props> = ({ path, children }) => {\n  const { isLoggedIn, needToken } = useAuth();\n\n  if (needToken) {\n    return <TwoFactorPage />;\n  }\n\n  if (!isLoggedIn) {\n    return <LoginPage />;\n  }\n\n  return (\n    <Route path={path}>\n      {children}\n    </Route>\n  );\n}\n\nexport default SecureRoute;","import axios from 'axios';\nimport { FunctionComponent } from 'react';\nimport { useQuery } from 'react-query';\n\ntype Props = {\n  id: number;\n  name: string;\n}\n\nconst Group: FunctionComponent<Props> = ({ id, name }) => {\n  const { data } = useQuery(['portfolioGroups', { id }], () =>\n    axios.get<any>(`https://api.passiv.com/api/v1/portfolioGroups/${id}/info`)\n  );\n\n  return (\n    <div className=\"bg-gray-800 border border-black rounded-lg shadow p-4\">\n      {data?.data && (\n        <>\n          <div className=\"text-xl font-bold\">{name}</div>\n          <div>{data.data.accuracy}%</div>\n        </>\n      )}\n    </div>\n  )\n};\n\nexport default Group;","import axios from 'axios';\nimport { useQuery } from 'react-query';\nimport { useAuth } from '../hooks/useAuth';\nimport Group from '../components/Group';\n\nconst DashboardPage = () => {\n  const { data } = useQuery('portfolioGroups', () =>\n    axios.get<any>('https://api.passiv.com/api/v1/portfolioGroups/')\n  );\n  const { logout } = useAuth();\n\n  console.log(data);\n\n  return (\n    <>\n      <div className=\"flex gap-2 w-64\">\n        {data?.data && data.data.map((group: any) => <Group id={group.id} name={group.name} key={group.id} />)}\n      </div>\n      <button onClick={logout} className=\"text-xs text-gray-600\">Logout</button>\n    </>\n  );\n}\n\nexport default DashboardPage;","import { QueryClient, QueryClientProvider } from 'react-query';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport SecureRoute from './components/SecureRoute';\nimport DashboardPage from './pages/DashboardPage';\n\nconst App = () => {\n  const queryClient = new QueryClient();\n  return (\n    <div className=\"bg-gray-900 h-screen text-gray-300 flex flex-col\">\n      <div className=\"flex-1\" />\n      <div className=\"max-w-7xl mx-auto\">\n        <QueryClientProvider client={queryClient}>\n          <Router>\n            <Switch>\n              <SecureRoute path=\"/\">\n                <DashboardPage />\n              </SecureRoute>\n              <Route path=\"*\">\n                <Redirect to=\"/\" />\n              </Route>\n            </Switch>\n          </Router>\n        </QueryClientProvider>\n      </div>\n      <div className=\"flex-1\" />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AuthProvider from './providers/AuthProvider';\nimport './tailwind.css';\n\naxios.defaults.baseURL = 'https://api.passiv.com/api/v1/';\n\nReactDOM.render(\n  <StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n"],"names":["createContext","useState","useContext","Router","StrictMode"],"mappings":"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"}